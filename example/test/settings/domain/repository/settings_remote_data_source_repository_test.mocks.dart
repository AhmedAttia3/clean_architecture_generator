// Mocks generated by Mockito 5.4.2 from annotations
// in example/test/settings/domain/repository/settings_remote_data_source_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:eitherx/eitherx.dart' as _i3;
import 'package:example/core/failure.dart' as _i10;
import 'package:example/core/network.dart' as _i8;
import 'package:example/settings/data/data-source/settings_local_data_source.dart'
    as _i9;
import 'package:example/settings/models/base_response.dart' as _i2;
import 'package:example/settings/models/product_model.dart' as _i6;
import 'package:example/settings/models/settings_model.dart' as _i7;
import 'package:example/settings/settings_remote_data_source.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseResponse_0<T> extends _i1.SmartFake
    implements _i2.BaseResponse<T> {
  _FakeBaseResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SettingsRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingsRemoteDataSource extends _i1.Mock
    implements _i4.SettingsRemoteDataSource {
  @override
  _i5.Future<_i2.BaseResponse<dynamic>> saveProduct({
    required String? productId,
    required String? type,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveProduct,
          [],
          {
            #productId: productId,
            #type: type,
          },
        ),
        returnValue: _i5.Future<_i2.BaseResponse<dynamic>>.value(
            _FakeBaseResponse_0<dynamic>(
          this,
          Invocation.method(
            #saveProduct,
            [],
            {
              #productId: productId,
              #type: type,
            },
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i2.BaseResponse<dynamic>>.value(
            _FakeBaseResponse_0<dynamic>(
          this,
          Invocation.method(
            #saveProduct,
            [],
            {
              #productId: productId,
              #type: type,
            },
          ),
        )),
      ) as _i5.Future<_i2.BaseResponse<dynamic>>);
  @override
  _i5.Future<_i2.BaseResponse<List<_i6.ProductModel>?>> getSavedProducts({
    required int? page,
    required int? limit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSavedProducts,
          [],
          {
            #page: page,
            #limit: limit,
          },
        ),
        returnValue:
            _i5.Future<_i2.BaseResponse<List<_i6.ProductModel>?>>.value(
                _FakeBaseResponse_0<List<_i6.ProductModel>?>(
          this,
          Invocation.method(
            #getSavedProducts,
            [],
            {
              #page: page,
              #limit: limit,
            },
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.BaseResponse<List<_i6.ProductModel>?>>.value(
                _FakeBaseResponse_0<List<_i6.ProductModel>?>(
          this,
          Invocation.method(
            #getSavedProducts,
            [],
            {
              #page: page,
              #limit: limit,
            },
          ),
        )),
      ) as _i5.Future<_i2.BaseResponse<List<_i6.ProductModel>?>>);
  @override
  _i5.Future<_i2.BaseResponse<_i7.SettingsModel?>> getSettings() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSettings,
          [],
        ),
        returnValue: _i5.Future<_i2.BaseResponse<_i7.SettingsModel?>>.value(
            _FakeBaseResponse_0<_i7.SettingsModel?>(
          this,
          Invocation.method(
            #getSettings,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.BaseResponse<_i7.SettingsModel?>>.value(
                _FakeBaseResponse_0<_i7.SettingsModel?>(
          this,
          Invocation.method(
            #getSettings,
            [],
          ),
        )),
      ) as _i5.Future<_i2.BaseResponse<_i7.SettingsModel?>>);
  @override
  _i5.Future<_i2.BaseResponse<List<_i7.SettingsModel>?>> getApp({
    required int? page,
    required int? limit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getApp,
          [],
          {
            #page: page,
            #limit: limit,
          },
        ),
        returnValue:
            _i5.Future<_i2.BaseResponse<List<_i7.SettingsModel>?>>.value(
                _FakeBaseResponse_0<List<_i7.SettingsModel>?>(
          this,
          Invocation.method(
            #getApp,
            [],
            {
              #page: page,
              #limit: limit,
            },
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.BaseResponse<List<_i7.SettingsModel>?>>.value(
                _FakeBaseResponse_0<List<_i7.SettingsModel>?>(
          this,
          Invocation.method(
            #getApp,
            [],
            {
              #page: page,
              #limit: limit,
            },
          ),
        )),
      ) as _i5.Future<_i2.BaseResponse<List<_i7.SettingsModel>?>>);
  @override
  _i5.Future<_i2.BaseResponse<int>> getAA() => (super.noSuchMethod(
        Invocation.method(
          #getAA,
          [],
        ),
        returnValue:
            _i5.Future<_i2.BaseResponse<int>>.value(_FakeBaseResponse_0<int>(
          this,
          Invocation.method(
            #getAA,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.BaseResponse<int>>.value(_FakeBaseResponse_0<int>(
          this,
          Invocation.method(
            #getAA,
            [],
          ),
        )),
      ) as _i5.Future<_i2.BaseResponse<int>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i8.NetworkInfo {
  @override
  _i5.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [SettingsLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingsLocalDataSource extends _i1.Mock
    implements _i9.SettingsLocalDataSource {
  @override
  _i5.Future<_i3.Either<_i10.Failure, _i3.Unit>> cacheSavedProducts(
          {required List<_i6.ProductModel>? data}) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheSavedProducts,
          [],
          {#data: data},
        ),
        returnValue: _i5.Future<_i3.Either<_i10.Failure, _i3.Unit>>.value(
            _FakeEither_1<_i10.Failure, _i3.Unit>(
          this,
          Invocation.method(
            #cacheSavedProducts,
            [],
            {#data: data},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i10.Failure, _i3.Unit>>.value(
                _FakeEither_1<_i10.Failure, _i3.Unit>(
          this,
          Invocation.method(
            #cacheSavedProducts,
            [],
            {#data: data},
          ),
        )),
      ) as _i5.Future<_i3.Either<_i10.Failure, _i3.Unit>>);
  @override
  _i3.Either<_i10.Failure, List<_i6.ProductModel>> getCacheSavedProducts() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCacheSavedProducts,
          [],
        ),
        returnValue: _FakeEither_1<_i10.Failure, List<_i6.ProductModel>>(
          this,
          Invocation.method(
            #getCacheSavedProducts,
            [],
          ),
        ),
        returnValueForMissingStub:
            _FakeEither_1<_i10.Failure, List<_i6.ProductModel>>(
          this,
          Invocation.method(
            #getCacheSavedProducts,
            [],
          ),
        ),
      ) as _i3.Either<_i10.Failure, List<_i6.ProductModel>>);
  @override
  _i5.Future<_i3.Either<_i10.Failure, _i3.Unit>> cacheSettings(
          {required _i7.SettingsModel? data}) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheSettings,
          [],
          {#data: data},
        ),
        returnValue: _i5.Future<_i3.Either<_i10.Failure, _i3.Unit>>.value(
            _FakeEither_1<_i10.Failure, _i3.Unit>(
          this,
          Invocation.method(
            #cacheSettings,
            [],
            {#data: data},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i10.Failure, _i3.Unit>>.value(
                _FakeEither_1<_i10.Failure, _i3.Unit>(
          this,
          Invocation.method(
            #cacheSettings,
            [],
            {#data: data},
          ),
        )),
      ) as _i5.Future<_i3.Either<_i10.Failure, _i3.Unit>>);
  @override
  _i3.Either<_i10.Failure, _i7.SettingsModel> getCacheSettings() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCacheSettings,
          [],
        ),
        returnValue: _FakeEither_1<_i10.Failure, _i7.SettingsModel>(
          this,
          Invocation.method(
            #getCacheSettings,
            [],
          ),
        ),
        returnValueForMissingStub:
            _FakeEither_1<_i10.Failure, _i7.SettingsModel>(
          this,
          Invocation.method(
            #getCacheSettings,
            [],
          ),
        ),
      ) as _i3.Either<_i10.Failure, _i7.SettingsModel>);
}
