// Mocks generated by Mockito 5.4.2 from annotations
// in example/test/settings/domain/repository/settings_remote_data_source_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:example/core/base_response.dart' as _i2;
import 'package:example/core/network.dart' as _i7;
import 'package:example/settings/models/product_model.dart' as _i5;
import 'package:example/settings/models/settings_model.dart' as _i6;
import 'package:example/settings/settings_remote_data_source.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preferences/shared_preferences.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseResponse_0<T> extends _i1.SmartFake
    implements _i2.BaseResponse<T> {
  _FakeBaseResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SettingsRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingsRemoteDataSource extends _i1.Mock
    implements _i3.SettingsRemoteDataSource {
  @override
  _i4.Future<_i2.BaseResponse<dynamic>> saveProduct({
    required String? productId,
    required String? type,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveProduct,
          [],
          {
            #productId: productId,
            #type: type,
          },
        ),
        returnValue: _i4.Future<_i2.BaseResponse<dynamic>>.value(
            _FakeBaseResponse_0<dynamic>(
          this,
          Invocation.method(
            #saveProduct,
            [],
            {
              #productId: productId,
              #type: type,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.BaseResponse<dynamic>>.value(
            _FakeBaseResponse_0<dynamic>(
          this,
          Invocation.method(
            #saveProduct,
            [],
            {
              #productId: productId,
              #type: type,
            },
          ),
        )),
      ) as _i4.Future<_i2.BaseResponse<dynamic>>);
  @override
  _i4.Future<_i2.BaseResponse<_i5.ProductModel?>> getSavedProducts({
    required int? page,
    required int? limit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSavedProducts,
          [],
          {
            #page: page,
            #limit: limit,
          },
        ),
        returnValue: _i4.Future<_i2.BaseResponse<_i5.ProductModel?>>.value(
            _FakeBaseResponse_0<_i5.ProductModel?>(
          this,
          Invocation.method(
            #getSavedProducts,
            [],
            {
              #page: page,
              #limit: limit,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.BaseResponse<_i5.ProductModel?>>.value(
                _FakeBaseResponse_0<_i5.ProductModel?>(
          this,
          Invocation.method(
            #getSavedProducts,
            [],
            {
              #page: page,
              #limit: limit,
            },
          ),
        )),
      ) as _i4.Future<_i2.BaseResponse<_i5.ProductModel?>>);
  @override
  _i4.Future<_i2.BaseResponse<_i6.SettingsModel?>> getSettings() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSettings,
          [],
        ),
        returnValue: _i4.Future<_i2.BaseResponse<_i6.SettingsModel?>>.value(
            _FakeBaseResponse_0<_i6.SettingsModel?>(
          this,
          Invocation.method(
            #getSettings,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.BaseResponse<_i6.SettingsModel?>>.value(
                _FakeBaseResponse_0<_i6.SettingsModel?>(
          this,
          Invocation.method(
            #getSettings,
            [],
          ),
        )),
      ) as _i4.Future<_i2.BaseResponse<_i6.SettingsModel?>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i7.NetworkInfo {
  @override
  _i4.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i8.SharedPreferences {
  @override
  Set<String> getKeys() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: <String>{},
        returnValueForMissingStub: <String>{},
      ) as Set<String>);
  @override
  Object? get(String? key) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as Object?);
  @override
  bool? getBool(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getBool,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as bool?);
  @override
  int? getInt(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getInt,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as int?);
  @override
  double? getDouble(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getDouble,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as double?);
  @override
  String? getString(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getString,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as String?);
  @override
  bool containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  List<String>? getStringList(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getStringList,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as List<String>?);
  @override
  _i4.Future<bool> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> setDouble(
    String? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> setStringList(
    String? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> commit() => (super.noSuchMethod(
        Invocation.method(
          #commit,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
