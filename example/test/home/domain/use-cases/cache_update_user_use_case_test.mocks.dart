// Mocks generated by Mockito 5.4.2 from annotations
// in example/test/home/domain/use-cases/cache_update_user_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:eitherx/eitherx.dart' as _i2;
import 'package:example/home/data/models/device_settings_model.dart' as _i6;
import 'package:example/home/domain/entities/device_settings_entity.dart'
    as _i7;
import 'package:example/home/domain/repository/home_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mwidgets/mwidgets.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRepository extends _i1.Mock implements _i3.HomeRepository {
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> cacheUpdateUser(
          {required _i6.DeviceSettingsModel? data}) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheUpdateUser,
          [],
          {#data: data},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #cacheUpdateUser,
            [],
            {#data: data},
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
                _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #cacheUpdateUser,
            [],
            {#data: data},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);
  @override
  _i2.Either<_i5.Failure, _i7.DeviceSettingsEntity> getCacheUpdateUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCacheUpdateUser,
          [],
        ),
        returnValue: _FakeEither_0<_i5.Failure, _i7.DeviceSettingsEntity>(
          this,
          Invocation.method(
            #getCacheUpdateUser,
            [],
          ),
        ),
        returnValueForMissingStub:
            _FakeEither_0<_i5.Failure, _i7.DeviceSettingsEntity>(
          this,
          Invocation.method(
            #getCacheUpdateUser,
            [],
          ),
        ),
      ) as _i2.Either<_i5.Failure, _i7.DeviceSettingsEntity>);
}
